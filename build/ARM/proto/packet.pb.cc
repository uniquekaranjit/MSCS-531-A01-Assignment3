// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: packet.proto
// Protobuf C++ Version: 6.32.0

#include "packet.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ProtoMessage {

inline constexpr PacketHeader_IdStringEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PacketHeader_IdStringEntry::PacketHeader_IdStringEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PacketHeader_IdStringEntry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PacketHeader_IdStringEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketHeader_IdStringEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketHeader_IdStringEntryDefaultTypeInternal() {}
  union {
    PacketHeader_IdStringEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketHeader_IdStringEntryDefaultTypeInternal _PacketHeader_IdStringEntry_default_instance_;

inline constexpr Packet::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tick_{::uint64_t{0u}},
        addr_{::uint64_t{0u}},
        cmd_{0u},
        size_{0u},
        pkt_id_{::uint64_t{0u}},
        pc_{::uint64_t{0u}},
        flags_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Packet::Packet(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Packet_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketDefaultTypeInternal() {}
  union {
    Packet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketDefaultTypeInternal _Packet_default_instance_;

inline constexpr PacketHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_strings_{},
        obj_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tick_freq_{::uint64_t{0u}},
        ver_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PacketHeader::PacketHeader(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PacketHeader_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PacketHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketHeaderDefaultTypeInternal() {}
  union {
    PacketHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketHeaderDefaultTypeInternal _PacketHeader_default_instance_;
}  // namespace ProtoMessage
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_packet_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_packet_2eproto = nullptr;
const ::uint32_t
    TableStruct_packet_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::PacketHeader_IdStringEntry, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::PacketHeader_IdStringEntry, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::PacketHeader_IdStringEntry, _impl_.value_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::PacketHeader, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::PacketHeader, _impl_.obj_id_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::PacketHeader, _impl_.ver_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::PacketHeader, _impl_.tick_freq_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::PacketHeader, _impl_.id_strings_),
        0,
        2,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::Packet, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::Packet, _impl_.tick_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::Packet, _impl_.cmd_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::Packet, _impl_.addr_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::Packet, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::Packet, _impl_.flags_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::Packet, _impl_.pkt_id_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::Packet, _impl_.pc_),
        0,
        2,
        1,
        3,
        6,
        4,
        5,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::ProtoMessage::PacketHeader_IdStringEntry)},
        {7, sizeof(::ProtoMessage::PacketHeader)},
        {18, sizeof(::ProtoMessage::Packet)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::ProtoMessage::_PacketHeader_IdStringEntry_default_instance_._instance,
    &::ProtoMessage::_PacketHeader_default_instance_._instance,
    &::ProtoMessage::_Packet_default_instance_._instance,
};
const char descriptor_table_protodef_packet_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014packet.proto\022\014ProtoMessage\"\254\001\n\014PacketH"
    "eader\022\016\n\006obj_id\030\001 \002(\t\022\016\n\003ver\030\002 \001(\r:\0010\022\021\n"
    "\ttick_freq\030\003 \002(\004\022<\n\nid_strings\030\004 \003(\0132(.P"
    "rotoMessage.PacketHeader.IdStringEntry\032+"
    "\n\rIdStringEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 "
    "\001(\t\"j\n\006Packet\022\014\n\004tick\030\001 \002(\004\022\013\n\003cmd\030\002 \002(\r"
    "\022\014\n\004addr\030\003 \002(\004\022\014\n\004size\030\004 \002(\r\022\r\n\005flags\030\005 "
    "\001(\r\022\016\n\006pkt_id\030\006 \001(\004\022\n\n\002pc\030\007 \001(\004"
};
static ::absl::once_flag descriptor_table_packet_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_packet_2eproto = {
    false,
    false,
    311,
    descriptor_table_protodef_packet_2eproto,
    "packet.proto",
    &descriptor_table_packet_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_packet_2eproto::offsets,
    file_level_enum_descriptors_packet_2eproto,
    file_level_service_descriptors_packet_2eproto,
};
namespace ProtoMessage {
// ===================================================================

class PacketHeader_IdStringEntry::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PacketHeader_IdStringEntry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PacketHeader_IdStringEntry, _impl_._has_bits_);
};

PacketHeader_IdStringEntry::PacketHeader_IdStringEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PacketHeader_IdStringEntry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessage.PacketHeader.IdStringEntry)
}
PROTOBUF_NDEBUG_INLINE PacketHeader_IdStringEntry::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ProtoMessage::PacketHeader_IdStringEntry& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        value_(arena, from.value_) {}

PacketHeader_IdStringEntry::PacketHeader_IdStringEntry(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PacketHeader_IdStringEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PacketHeader_IdStringEntry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PacketHeader_IdStringEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.key_ = from._impl_.key_;

  // @@protoc_insertion_point(copy_constructor:ProtoMessage.PacketHeader.IdStringEntry)
}
PROTOBUF_NDEBUG_INLINE PacketHeader_IdStringEntry::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        value_(arena) {}

inline void PacketHeader_IdStringEntry::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.key_ = {};
}
PacketHeader_IdStringEntry::~PacketHeader_IdStringEntry() {
  // @@protoc_insertion_point(destructor:ProtoMessage.PacketHeader.IdStringEntry)
  SharedDtor(*this);
}
inline void PacketHeader_IdStringEntry::SharedDtor(MessageLite& self) {
  PacketHeader_IdStringEntry& this_ = static_cast<PacketHeader_IdStringEntry&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PacketHeader_IdStringEntry::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PacketHeader_IdStringEntry(arena);
}
constexpr auto PacketHeader_IdStringEntry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PacketHeader_IdStringEntry),
                                            alignof(PacketHeader_IdStringEntry));
}
constexpr auto PacketHeader_IdStringEntry::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PacketHeader_IdStringEntry_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PacketHeader_IdStringEntry::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PacketHeader_IdStringEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PacketHeader_IdStringEntry::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PacketHeader_IdStringEntry>(), &PacketHeader_IdStringEntry::ByteSizeLong,
              &PacketHeader_IdStringEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PacketHeader_IdStringEntry, _impl_._cached_size_),
          false,
      },
      &PacketHeader_IdStringEntry::kDescriptorMethods,
      &descriptor_table_packet_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PacketHeader_IdStringEntry_class_data_ =
        PacketHeader_IdStringEntry::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PacketHeader_IdStringEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PacketHeader_IdStringEntry_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PacketHeader_IdStringEntry_class_data_.tc_table);
  return PacketHeader_IdStringEntry_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2>
PacketHeader_IdStringEntry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PacketHeader_IdStringEntry, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PacketHeader_IdStringEntry_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ProtoMessage::PacketHeader_IdStringEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string value = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PacketHeader_IdStringEntry, _impl_.value_)}},
    // optional uint32 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PacketHeader_IdStringEntry, _impl_.key_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(PacketHeader_IdStringEntry, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 key = 1;
    {PROTOBUF_FIELD_OFFSET(PacketHeader_IdStringEntry, _impl_.key_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string value = 2;
    {PROTOBUF_FIELD_OFFSET(PacketHeader_IdStringEntry, _impl_.value_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\0\5\0\0\0\0\0"
    "ProtoMessage.PacketHeader.IdStringEntry"
    "value"
  }},
};
PROTOBUF_NOINLINE void PacketHeader_IdStringEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessage.PacketHeader.IdStringEntry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.value_.ClearNonDefaultToEmpty();
  }
  _impl_.key_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PacketHeader_IdStringEntry::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PacketHeader_IdStringEntry& this_ = static_cast<const PacketHeader_IdStringEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PacketHeader_IdStringEntry::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PacketHeader_IdStringEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessage.PacketHeader.IdStringEntry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint32 key = 1;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this_._internal_key(), target);
  }

  // optional string value = 2;
  if ((cached_has_bits & 0x00000001U) != 0) {
    const ::std::string& _s = this_._internal_value();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "ProtoMessage.PacketHeader.IdStringEntry.value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessage.PacketHeader.IdStringEntry)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PacketHeader_IdStringEntry::ByteSizeLong(const MessageLite& base) {
  const PacketHeader_IdStringEntry& this_ = static_cast<const PacketHeader_IdStringEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PacketHeader_IdStringEntry::ByteSizeLong() const {
  const PacketHeader_IdStringEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ProtoMessage.PacketHeader.IdStringEntry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // optional string value = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_value());
    }
    // optional uint32 key = 1;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_key());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PacketHeader_IdStringEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PacketHeader_IdStringEntry*>(&to_msg);
  auto& from = static_cast<const PacketHeader_IdStringEntry&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessage.PacketHeader.IdStringEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _this->_internal_set_value(from._internal_value());
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _this->_impl_.key_ = from._impl_.key_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PacketHeader_IdStringEntry::CopyFrom(const PacketHeader_IdStringEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessage.PacketHeader.IdStringEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PacketHeader_IdStringEntry::InternalSwap(PacketHeader_IdStringEntry* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  swap(_impl_.key_, other->_impl_.key_);
}

::google::protobuf::Metadata PacketHeader_IdStringEntry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PacketHeader::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PacketHeader>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PacketHeader, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

PacketHeader::PacketHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PacketHeader_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessage.PacketHeader)
}
PROTOBUF_NDEBUG_INLINE PacketHeader::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ProtoMessage::PacketHeader& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_strings_{visibility, arena, from.id_strings_},
        obj_id_(arena, from.obj_id_) {}

PacketHeader::PacketHeader(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PacketHeader& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PacketHeader_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PacketHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tick_freq_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tick_freq_),
           offsetof(Impl_, ver_) -
               offsetof(Impl_, tick_freq_) +
               sizeof(Impl_::ver_));

  // @@protoc_insertion_point(copy_constructor:ProtoMessage.PacketHeader)
}
PROTOBUF_NDEBUG_INLINE PacketHeader::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        id_strings_{visibility, arena},
        obj_id_(arena) {}

inline void PacketHeader::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tick_freq_),
           0,
           offsetof(Impl_, ver_) -
               offsetof(Impl_, tick_freq_) +
               sizeof(Impl_::ver_));
}
PacketHeader::~PacketHeader() {
  // @@protoc_insertion_point(destructor:ProtoMessage.PacketHeader)
  SharedDtor(*this);
}
inline void PacketHeader::SharedDtor(MessageLite& self) {
  PacketHeader& this_ = static_cast<PacketHeader&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.obj_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PacketHeader::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PacketHeader(arena);
}
constexpr auto PacketHeader::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PacketHeader, _impl_.id_strings_) +
          decltype(PacketHeader::_impl_.id_strings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PacketHeader), alignof(PacketHeader), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PacketHeader::PlacementNew_,
                                 sizeof(PacketHeader),
                                 alignof(PacketHeader));
  }
}
constexpr auto PacketHeader::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PacketHeader_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          PacketHeader::IsInitializedImpl,
          &PacketHeader::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PacketHeader>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PacketHeader::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PacketHeader>(), &PacketHeader::ByteSizeLong,
              &PacketHeader::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PacketHeader, _impl_._cached_size_),
          false,
      },
      &PacketHeader::kDescriptorMethods,
      &descriptor_table_packet_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PacketHeader_class_data_ =
        PacketHeader::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PacketHeader::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PacketHeader_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PacketHeader_class_data_.tc_table);
  return PacketHeader_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 40, 2>
PacketHeader::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PacketHeader, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PacketHeader_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ProtoMessage::PacketHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .ProtoMessage.PacketHeader.IdStringEntry id_strings = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PacketHeader, _impl_.id_strings_)}},
    // required string obj_id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PacketHeader, _impl_.obj_id_)}},
    // optional uint32 ver = 2 [default = 0];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PacketHeader, _impl_.ver_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(PacketHeader, _impl_.ver_)}},
    // required uint64 tick_freq = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PacketHeader, _impl_.tick_freq_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(PacketHeader, _impl_.tick_freq_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string obj_id = 1;
    {PROTOBUF_FIELD_OFFSET(PacketHeader, _impl_.obj_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 ver = 2 [default = 0];
    {PROTOBUF_FIELD_OFFSET(PacketHeader, _impl_.ver_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint64 tick_freq = 3;
    {PROTOBUF_FIELD_OFFSET(PacketHeader, _impl_.tick_freq_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated .ProtoMessage.PacketHeader.IdStringEntry id_strings = 4;
    {PROTOBUF_FIELD_OFFSET(PacketHeader, _impl_.id_strings_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ProtoMessage::PacketHeader_IdStringEntry>()},
  }},
  {{
    "\31\6\0\0\0\0\0\0"
    "ProtoMessage.PacketHeader"
    "obj_id"
  }},
};
PROTOBUF_NOINLINE void PacketHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessage.PacketHeader)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_strings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.obj_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.tick_freq_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ver_) -
        reinterpret_cast<char*>(&_impl_.tick_freq_)) + sizeof(_impl_.ver_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PacketHeader::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PacketHeader& this_ = static_cast<const PacketHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PacketHeader::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PacketHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessage.PacketHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // required string obj_id = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    const ::std::string& _s = this_._internal_obj_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "ProtoMessage.PacketHeader.obj_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint32 ver = 2 [default = 0];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_ver(), target);
  }

  // required uint64 tick_freq = 3;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_tick_freq(), target);
  }

  // repeated .ProtoMessage.PacketHeader.IdStringEntry id_strings = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_id_strings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_id_strings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessage.PacketHeader)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PacketHeader::ByteSizeLong(const MessageLite& base) {
  const PacketHeader& this_ = static_cast<const PacketHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PacketHeader::ByteSizeLong() const {
  const PacketHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ProtoMessage.PacketHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .ProtoMessage.PacketHeader.IdStringEntry id_strings = 4;
    {
      total_size += 1UL * this_._internal_id_strings_size();
      for (const auto& msg : this_._internal_id_strings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // required string obj_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_obj_id());
    }
    // required uint64 tick_freq = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_tick_freq());
    }
  }
   {
    // optional uint32 ver = 2 [default = 0];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_ver());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PacketHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PacketHeader*>(&to_msg);
  auto& from = static_cast<const PacketHeader&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessage.PacketHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_id_strings()->MergeFrom(
      from._internal_id_strings());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _this->_internal_set_obj_id(from._internal_obj_id());
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _this->_impl_.tick_freq_ = from._impl_.tick_freq_;
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _this->_impl_.ver_ = from._impl_.ver_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PacketHeader::CopyFrom(const PacketHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessage.PacketHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PacketHeader::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PacketHeader&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PacketHeader::InternalSwap(PacketHeader* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.id_strings_.InternalSwap(&other->_impl_.id_strings_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.obj_id_, &other->_impl_.obj_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PacketHeader, _impl_.ver_)
      + sizeof(PacketHeader::_impl_.ver_)
      - PROTOBUF_FIELD_OFFSET(PacketHeader, _impl_.tick_freq_)>(
          reinterpret_cast<char*>(&_impl_.tick_freq_),
          reinterpret_cast<char*>(&other->_impl_.tick_freq_));
}

::google::protobuf::Metadata PacketHeader::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Packet::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Packet>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Packet, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000f) ^ 0x0000000f) != 0;
  }
};

Packet::Packet(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Packet_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessage.Packet)
}
Packet::Packet(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Packet& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Packet_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Packet::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Packet::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tick_),
           0,
           offsetof(Impl_, flags_) -
               offsetof(Impl_, tick_) +
               sizeof(Impl_::flags_));
}
Packet::~Packet() {
  // @@protoc_insertion_point(destructor:ProtoMessage.Packet)
  SharedDtor(*this);
}
inline void Packet::SharedDtor(MessageLite& self) {
  Packet& this_ = static_cast<Packet&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Packet::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Packet(arena);
}
constexpr auto Packet::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Packet),
                                            alignof(Packet));
}
constexpr auto Packet::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Packet_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          Packet::IsInitializedImpl,
          &Packet::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Packet>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Packet::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Packet>(), &Packet::ByteSizeLong,
              &Packet::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Packet, _impl_._cached_size_),
          false,
      },
      &Packet::kDescriptorMethods,
      &descriptor_table_packet_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Packet_class_data_ =
        Packet::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Packet::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Packet_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Packet_class_data_.tc_table);
  return Packet_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2>
Packet::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Packet, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Packet_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ProtoMessage::Packet>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required uint64 tick = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Packet, _impl_.tick_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.tick_)}},
    // required uint32 cmd = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Packet, _impl_.cmd_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.cmd_)}},
    // required uint64 addr = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Packet, _impl_.addr_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.addr_)}},
    // required uint32 size = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Packet, _impl_.size_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.size_)}},
    // optional uint32 flags = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Packet, _impl_.flags_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.flags_)}},
    // optional uint64 pkt_id = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Packet, _impl_.pkt_id_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.pkt_id_)}},
    // optional uint64 pc = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Packet, _impl_.pc_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.pc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint64 tick = 1;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.tick_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // required uint32 cmd = 2;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.cmd_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint64 addr = 3;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.addr_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // required uint32 size = 4;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.size_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 flags = 5;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.flags_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 pkt_id = 6;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.pkt_id_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 pc = 7;
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.pc_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Packet::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessage.Packet)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    ::memset(&_impl_.tick_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.flags_) -
        reinterpret_cast<char*>(&_impl_.tick_)) + sizeof(_impl_.flags_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Packet::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Packet& this_ = static_cast<const Packet&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Packet::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Packet& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessage.Packet)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // required uint64 tick = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_tick(), target);
  }

  // required uint32 cmd = 2;
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_cmd(), target);
  }

  // required uint64 addr = 3;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_addr(), target);
  }

  // required uint32 size = 4;
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_size(), target);
  }

  // optional uint32 flags = 5;
  if ((cached_has_bits & 0x00000040U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_flags(), target);
  }

  // optional uint64 pkt_id = 6;
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this_._internal_pkt_id(), target);
  }

  // optional uint64 pc = 7;
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this_._internal_pc(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessage.Packet)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Packet::ByteSizeLong(const MessageLite& base) {
  const Packet& this_ = static_cast<const Packet&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Packet::ByteSizeLong() const {
  const Packet& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ProtoMessage.Packet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // required uint64 tick = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_tick());
    }
    // required uint64 addr = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_addr());
    }
    // required uint32 cmd = 2;
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_cmd());
    }
    // required uint32 size = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_size());
    }
  }
  if ((cached_has_bits & 0x00000070U) != 0) {
    // optional uint64 pkt_id = 6;
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_pkt_id());
    }
    // optional uint64 pc = 7;
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_pc());
    }
    // optional uint32 flags = 5;
    if ((cached_has_bits & 0x00000040U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_flags());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Packet::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Packet*>(&to_msg);
  auto& from = static_cast<const Packet&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessage.Packet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _this->_impl_.tick_ = from._impl_.tick_;
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _this->_impl_.addr_ = from._impl_.addr_;
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _this->_impl_.cmd_ = from._impl_.cmd_;
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _this->_impl_.size_ = from._impl_.size_;
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _this->_impl_.pkt_id_ = from._impl_.pkt_id_;
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      _this->_impl_.pc_ = from._impl_.pc_;
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Packet::CopyFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessage.Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Packet::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const Packet&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Packet::InternalSwap(Packet* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Packet, _impl_.flags_)
      + sizeof(Packet::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(Packet, _impl_.tick_)>(
          reinterpret_cast<char*>(&_impl_.tick_),
          reinterpret_cast<char*>(&other->_impl_.tick_));
}

::google::protobuf::Metadata Packet::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtoMessage
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_packet_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
