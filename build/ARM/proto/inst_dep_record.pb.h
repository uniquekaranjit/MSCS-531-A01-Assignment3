// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: inst_dep_record.proto
// Protobuf C++ Version: 6.32.0

#ifndef inst_5fdep_5frecord_2eproto_2epb_2eh
#define inst_5fdep_5frecord_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_inst_5fdep_5frecord_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_inst_5fdep_5frecord_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_inst_5fdep_5frecord_2eproto;
}  // extern "C"
namespace ProtoMessage {
enum InstDepRecord_RecordType : int;
extern const uint32_t InstDepRecord_RecordType_internal_data_[];
class InstDepRecord;
struct InstDepRecordDefaultTypeInternal;
extern InstDepRecordDefaultTypeInternal _InstDepRecord_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull InstDepRecord_class_data_;
class InstDepRecordHeader;
struct InstDepRecordHeaderDefaultTypeInternal;
extern InstDepRecordHeaderDefaultTypeInternal _InstDepRecordHeader_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull InstDepRecordHeader_class_data_;
}  // namespace ProtoMessage
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::ProtoMessage::InstDepRecord_RecordType_internal_data_>
    internal::EnumTraitsImpl::value<::ProtoMessage::InstDepRecord_RecordType>;
}  // namespace protobuf
}  // namespace google

namespace ProtoMessage {
enum InstDepRecord_RecordType : int {
  InstDepRecord_RecordType_INVALID = 0,
  InstDepRecord_RecordType_LOAD = 1,
  InstDepRecord_RecordType_STORE = 2,
  InstDepRecord_RecordType_COMP = 3,
};

extern const uint32_t InstDepRecord_RecordType_internal_data_[];
inline constexpr InstDepRecord_RecordType InstDepRecord_RecordType_RecordType_MIN =
    static_cast<InstDepRecord_RecordType>(0);
inline constexpr InstDepRecord_RecordType InstDepRecord_RecordType_RecordType_MAX =
    static_cast<InstDepRecord_RecordType>(3);
inline bool InstDepRecord_RecordType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
inline constexpr int InstDepRecord_RecordType_RecordType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL InstDepRecord_RecordType_descriptor();
template <typename T>
const ::std::string& InstDepRecord_RecordType_Name(T value) {
  static_assert(::std::is_same<T, InstDepRecord_RecordType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to RecordType_Name().");
  return InstDepRecord_RecordType_Name(static_cast<InstDepRecord_RecordType>(value));
}
template <>
inline const ::std::string& InstDepRecord_RecordType_Name(InstDepRecord_RecordType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<InstDepRecord_RecordType_descriptor, 0, 3>(
      static_cast<int>(value));
}
inline bool InstDepRecord_RecordType_Parse(
    ::absl::string_view name, InstDepRecord_RecordType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<InstDepRecord_RecordType>(InstDepRecord_RecordType_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class InstDepRecordHeader final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ProtoMessage.InstDepRecordHeader) */ {
 public:
  inline InstDepRecordHeader() : InstDepRecordHeader(nullptr) {}
  ~InstDepRecordHeader() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InstDepRecordHeader* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InstDepRecordHeader));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InstDepRecordHeader(::google::protobuf::internal::ConstantInitialized);

  inline InstDepRecordHeader(const InstDepRecordHeader& from) : InstDepRecordHeader(nullptr, from) {}
  inline InstDepRecordHeader(InstDepRecordHeader&& from) noexcept
      : InstDepRecordHeader(nullptr, ::std::move(from)) {}
  inline InstDepRecordHeader& operator=(const InstDepRecordHeader& from) {
    CopyFrom(from);
    return *this;
  }
  inline InstDepRecordHeader& operator=(InstDepRecordHeader&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InstDepRecordHeader& default_instance() {
    return *reinterpret_cast<const InstDepRecordHeader*>(
        &_InstDepRecordHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(InstDepRecordHeader& a, InstDepRecordHeader& b) { a.Swap(&b); }
  inline void Swap(InstDepRecordHeader* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InstDepRecordHeader* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InstDepRecordHeader* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InstDepRecordHeader>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InstDepRecordHeader& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InstDepRecordHeader& from) { InstDepRecordHeader::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InstDepRecordHeader* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ProtoMessage.InstDepRecordHeader"; }

 protected:
  explicit InstDepRecordHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  InstDepRecordHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const InstDepRecordHeader& from);
  InstDepRecordHeader(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, InstDepRecordHeader&& from) noexcept
      : InstDepRecordHeader(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kObjIdFieldNumber = 1,
    kTickFreqFieldNumber = 3,
    kVerFieldNumber = 2,
    kWindowSizeFieldNumber = 4,
  };
  // required string obj_id = 1;
  bool has_obj_id() const;
  void clear_obj_id() ;
  const ::std::string& obj_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_obj_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_obj_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_obj_id();
  void set_allocated_obj_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_obj_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_obj_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_obj_id();

  public:
  // required uint64 tick_freq = 3;
  bool has_tick_freq() const;
  void clear_tick_freq() ;
  ::uint64_t tick_freq() const;
  void set_tick_freq(::uint64_t value);

  private:
  ::uint64_t _internal_tick_freq() const;
  void _internal_set_tick_freq(::uint64_t value);

  public:
  // optional uint32 ver = 2 [default = 0];
  bool has_ver() const;
  void clear_ver() ;
  ::uint32_t ver() const;
  void set_ver(::uint32_t value);

  private:
  ::uint32_t _internal_ver() const;
  void _internal_set_ver(::uint32_t value);

  public:
  // required uint32 window_size = 4;
  bool has_window_size() const;
  void clear_window_size() ;
  ::uint32_t window_size() const;
  void set_window_size(::uint32_t value);

  private:
  ::uint32_t _internal_window_size() const;
  void _internal_set_window_size(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ProtoMessage.InstDepRecordHeader)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 47,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const InstDepRecordHeader& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr obj_id_;
    ::uint64_t tick_freq_;
    ::uint32_t ver_;
    ::uint32_t window_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inst_5fdep_5frecord_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull InstDepRecordHeader_class_data_;
// -------------------------------------------------------------------

class InstDepRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ProtoMessage.InstDepRecord) */ {
 public:
  inline InstDepRecord() : InstDepRecord(nullptr) {}
  ~InstDepRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InstDepRecord* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InstDepRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InstDepRecord(::google::protobuf::internal::ConstantInitialized);

  inline InstDepRecord(const InstDepRecord& from) : InstDepRecord(nullptr, from) {}
  inline InstDepRecord(InstDepRecord&& from) noexcept
      : InstDepRecord(nullptr, ::std::move(from)) {}
  inline InstDepRecord& operator=(const InstDepRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline InstDepRecord& operator=(InstDepRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InstDepRecord& default_instance() {
    return *reinterpret_cast<const InstDepRecord*>(
        &_InstDepRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(InstDepRecord& a, InstDepRecord& b) { a.Swap(&b); }
  inline void Swap(InstDepRecord* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InstDepRecord* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InstDepRecord* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InstDepRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InstDepRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InstDepRecord& from) { InstDepRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InstDepRecord* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ProtoMessage.InstDepRecord"; }

 protected:
  explicit InstDepRecord(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  InstDepRecord(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const InstDepRecord& from);
  InstDepRecord(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, InstDepRecord&& from) noexcept
      : InstDepRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using RecordType = InstDepRecord_RecordType;
  static constexpr RecordType INVALID = InstDepRecord_RecordType_INVALID;
  static constexpr RecordType LOAD = InstDepRecord_RecordType_LOAD;
  static constexpr RecordType STORE = InstDepRecord_RecordType_STORE;
  static constexpr RecordType COMP = InstDepRecord_RecordType_COMP;
  static inline bool RecordType_IsValid(int value) {
    return InstDepRecord_RecordType_IsValid(value);
  }
  static constexpr RecordType RecordType_MIN = InstDepRecord_RecordType_RecordType_MIN;
  static constexpr RecordType RecordType_MAX = InstDepRecord_RecordType_RecordType_MAX;
  static constexpr int RecordType_ARRAYSIZE = InstDepRecord_RecordType_RecordType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RecordType_descriptor() {
    return InstDepRecord_RecordType_descriptor();
  }
  template <typename T>
  static inline const ::std::string& RecordType_Name(T value) {
    return InstDepRecord_RecordType_Name(value);
  }
  static inline bool RecordType_Parse(
      ::absl::string_view name, RecordType* PROTOBUF_NONNULL value) {
    return InstDepRecord_RecordType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRobDepFieldNumber = 6,
    kRegDepFieldNumber = 8,
    kSeqNumFieldNumber = 1,
    kPAddrFieldNumber = 3,
    kTypeFieldNumber = 2,
    kSizeFieldNumber = 4,
    kCompDelayFieldNumber = 7,
    kFlagsFieldNumber = 5,
    kWeightFieldNumber = 9,
    kPcFieldNumber = 10,
    kVAddrFieldNumber = 11,
    kAsidFieldNumber = 12,
  };
  // repeated uint64 rob_dep = 6;
  int rob_dep_size() const;
  private:
  int _internal_rob_dep_size() const;

  public:
  void clear_rob_dep() ;
  ::uint64_t rob_dep(int index) const;
  void set_rob_dep(int index, ::uint64_t value);
  void add_rob_dep(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& rob_dep() const;
  ::google::protobuf::RepeatedField<::uint64_t>* PROTOBUF_NONNULL mutable_rob_dep();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_rob_dep() const;
  ::google::protobuf::RepeatedField<::uint64_t>* PROTOBUF_NONNULL _internal_mutable_rob_dep();

  public:
  // repeated uint64 reg_dep = 8;
  int reg_dep_size() const;
  private:
  int _internal_reg_dep_size() const;

  public:
  void clear_reg_dep() ;
  ::uint64_t reg_dep(int index) const;
  void set_reg_dep(int index, ::uint64_t value);
  void add_reg_dep(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& reg_dep() const;
  ::google::protobuf::RepeatedField<::uint64_t>* PROTOBUF_NONNULL mutable_reg_dep();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_reg_dep() const;
  ::google::protobuf::RepeatedField<::uint64_t>* PROTOBUF_NONNULL _internal_mutable_reg_dep();

  public:
  // required uint64 seq_num = 1;
  bool has_seq_num() const;
  void clear_seq_num() ;
  ::uint64_t seq_num() const;
  void set_seq_num(::uint64_t value);

  private:
  ::uint64_t _internal_seq_num() const;
  void _internal_set_seq_num(::uint64_t value);

  public:
  // optional uint64 p_addr = 3;
  bool has_p_addr() const;
  void clear_p_addr() ;
  ::uint64_t p_addr() const;
  void set_p_addr(::uint64_t value);

  private:
  ::uint64_t _internal_p_addr() const;
  void _internal_set_p_addr(::uint64_t value);

  public:
  // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
  bool has_type() const;
  void clear_type() ;
  ::ProtoMessage::InstDepRecord_RecordType type() const;
  void set_type(::ProtoMessage::InstDepRecord_RecordType value);

  private:
  ::ProtoMessage::InstDepRecord_RecordType _internal_type() const;
  void _internal_set_type(::ProtoMessage::InstDepRecord_RecordType value);

  public:
  // optional uint32 size = 4;
  bool has_size() const;
  void clear_size() ;
  ::uint32_t size() const;
  void set_size(::uint32_t value);

  private:
  ::uint32_t _internal_size() const;
  void _internal_set_size(::uint32_t value);

  public:
  // required uint64 comp_delay = 7;
  bool has_comp_delay() const;
  void clear_comp_delay() ;
  ::uint64_t comp_delay() const;
  void set_comp_delay(::uint64_t value);

  private:
  ::uint64_t _internal_comp_delay() const;
  void _internal_set_comp_delay(::uint64_t value);

  public:
  // optional uint32 flags = 5;
  bool has_flags() const;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // optional uint32 weight = 9;
  bool has_weight() const;
  void clear_weight() ;
  ::uint32_t weight() const;
  void set_weight(::uint32_t value);

  private:
  ::uint32_t _internal_weight() const;
  void _internal_set_weight(::uint32_t value);

  public:
  // optional uint64 pc = 10;
  bool has_pc() const;
  void clear_pc() ;
  ::uint64_t pc() const;
  void set_pc(::uint64_t value);

  private:
  ::uint64_t _internal_pc() const;
  void _internal_set_pc(::uint64_t value);

  public:
  // optional uint64 v_addr = 11;
  bool has_v_addr() const;
  void clear_v_addr() ;
  ::uint64_t v_addr() const;
  void set_v_addr(::uint64_t value);

  private:
  ::uint64_t _internal_v_addr() const;
  void _internal_set_v_addr(::uint64_t value);

  public:
  // optional uint32 asid = 12;
  bool has_asid() const;
  void clear_asid() ;
  ::uint32_t asid() const;
  void set_asid(::uint32_t value);

  private:
  ::uint32_t _internal_asid() const;
  void _internal_set_asid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ProtoMessage.InstDepRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 12,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const InstDepRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint64_t> rob_dep_;
    ::google::protobuf::RepeatedField<::uint64_t> reg_dep_;
    ::uint64_t seq_num_;
    ::uint64_t p_addr_;
    int type_;
    ::uint32_t size_;
    ::uint64_t comp_delay_;
    ::uint32_t flags_;
    ::uint32_t weight_;
    ::uint64_t pc_;
    ::uint64_t v_addr_;
    ::uint32_t asid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inst_5fdep_5frecord_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull InstDepRecord_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// InstDepRecordHeader

// required string obj_id = 1;
inline bool InstDepRecordHeader::has_obj_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001U) != 0;
  return value;
}
inline void InstDepRecordHeader::clear_obj_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.obj_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& InstDepRecordHeader::obj_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecordHeader.obj_id)
  return _internal_obj_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void InstDepRecordHeader::set_obj_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.obj_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecordHeader.obj_id)
}
inline ::std::string* PROTOBUF_NONNULL InstDepRecordHeader::mutable_obj_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_obj_id();
  // @@protoc_insertion_point(field_mutable:ProtoMessage.InstDepRecordHeader.obj_id)
  return _s;
}
inline const ::std::string& InstDepRecordHeader::_internal_obj_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.obj_id_.Get();
}
inline void InstDepRecordHeader::_internal_set_obj_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.obj_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL InstDepRecordHeader::_internal_mutable_obj_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.obj_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE InstDepRecordHeader::release_obj_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ProtoMessage.InstDepRecordHeader.obj_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.obj_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.obj_id_.Set("", GetArena());
  }
  return released;
}
inline void InstDepRecordHeader::set_allocated_obj_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.obj_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.obj_id_.IsDefault()) {
    _impl_.obj_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ProtoMessage.InstDepRecordHeader.obj_id)
}

// optional uint32 ver = 2 [default = 0];
inline bool InstDepRecordHeader::has_ver() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  return value;
}
inline void InstDepRecordHeader::clear_ver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ver_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint32_t InstDepRecordHeader::ver() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecordHeader.ver)
  return _internal_ver();
}
inline void InstDepRecordHeader::set_ver(::uint32_t value) {
  _internal_set_ver(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecordHeader.ver)
}
inline ::uint32_t InstDepRecordHeader::_internal_ver() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ver_;
}
inline void InstDepRecordHeader::_internal_set_ver(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ver_ = value;
}

// required uint64 tick_freq = 3;
inline bool InstDepRecordHeader::has_tick_freq() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  return value;
}
inline void InstDepRecordHeader::clear_tick_freq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tick_freq_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint64_t InstDepRecordHeader::tick_freq() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecordHeader.tick_freq)
  return _internal_tick_freq();
}
inline void InstDepRecordHeader::set_tick_freq(::uint64_t value) {
  _internal_set_tick_freq(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecordHeader.tick_freq)
}
inline ::uint64_t InstDepRecordHeader::_internal_tick_freq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tick_freq_;
}
inline void InstDepRecordHeader::_internal_set_tick_freq(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tick_freq_ = value;
}

// required uint32 window_size = 4;
inline bool InstDepRecordHeader::has_window_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  return value;
}
inline void InstDepRecordHeader::clear_window_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.window_size_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint32_t InstDepRecordHeader::window_size() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecordHeader.window_size)
  return _internal_window_size();
}
inline void InstDepRecordHeader::set_window_size(::uint32_t value) {
  _internal_set_window_size(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecordHeader.window_size)
}
inline ::uint32_t InstDepRecordHeader::_internal_window_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.window_size_;
}
inline void InstDepRecordHeader::_internal_set_window_size(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.window_size_ = value;
}

// -------------------------------------------------------------------

// InstDepRecord

// required uint64 seq_num = 1;
inline bool InstDepRecord::has_seq_num() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001U) != 0;
  return value;
}
inline void InstDepRecord::clear_seq_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint64_t InstDepRecord::seq_num() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.seq_num)
  return _internal_seq_num();
}
inline void InstDepRecord::set_seq_num(::uint64_t value) {
  _internal_set_seq_num(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.seq_num)
}
inline ::uint64_t InstDepRecord::_internal_seq_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_num_;
}
inline void InstDepRecord::_internal_set_seq_num(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_num_ = value;
}

// required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
inline bool InstDepRecord::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  return value;
}
inline void InstDepRecord::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::ProtoMessage::InstDepRecord_RecordType InstDepRecord::type() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.type)
  return _internal_type();
}
inline void InstDepRecord::set_type(::ProtoMessage::InstDepRecord_RecordType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.type)
}
inline ::ProtoMessage::InstDepRecord_RecordType InstDepRecord::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ProtoMessage::InstDepRecord_RecordType>(_impl_.type_);
}
inline void InstDepRecord::_internal_set_type(::ProtoMessage::InstDepRecord_RecordType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::ProtoMessage::InstDepRecord_RecordType_internal_data_));
                                          _impl_.type_ = value;
}

// optional uint64 p_addr = 3;
inline bool InstDepRecord::has_p_addr() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  return value;
}
inline void InstDepRecord::clear_p_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.p_addr_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint64_t InstDepRecord::p_addr() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.p_addr)
  return _internal_p_addr();
}
inline void InstDepRecord::set_p_addr(::uint64_t value) {
  _internal_set_p_addr(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.p_addr)
}
inline ::uint64_t InstDepRecord::_internal_p_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.p_addr_;
}
inline void InstDepRecord::_internal_set_p_addr(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.p_addr_ = value;
}

// optional uint32 size = 4;
inline bool InstDepRecord::has_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  return value;
}
inline void InstDepRecord::clear_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint32_t InstDepRecord::size() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.size)
  return _internal_size();
}
inline void InstDepRecord::set_size(::uint32_t value) {
  _internal_set_size(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.size)
}
inline ::uint32_t InstDepRecord::_internal_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.size_;
}
inline void InstDepRecord::_internal_set_size(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = value;
}

// optional uint32 flags = 5;
inline bool InstDepRecord::has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020U) != 0;
  return value;
}
inline void InstDepRecord::clear_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::uint32_t InstDepRecord::flags() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.flags)
  return _internal_flags();
}
inline void InstDepRecord::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.flags)
}
inline ::uint32_t InstDepRecord::_internal_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flags_;
}
inline void InstDepRecord::_internal_set_flags(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = value;
}

// repeated uint64 rob_dep = 6;
inline int InstDepRecord::_internal_rob_dep_size() const {
  return _internal_rob_dep().size();
}
inline int InstDepRecord::rob_dep_size() const {
  return _internal_rob_dep_size();
}
inline void InstDepRecord::clear_rob_dep() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rob_dep_.Clear();
}
inline ::uint64_t InstDepRecord::rob_dep(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.rob_dep)
  return _internal_rob_dep().Get(index);
}
inline void InstDepRecord::set_rob_dep(int index, ::uint64_t value) {
  _internal_mutable_rob_dep()->Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.rob_dep)
}
inline void InstDepRecord::add_rob_dep(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_rob_dep()->Add(value);
  // @@protoc_insertion_point(field_add:ProtoMessage.InstDepRecord.rob_dep)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& InstDepRecord::rob_dep() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ProtoMessage.InstDepRecord.rob_dep)
  return _internal_rob_dep();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* PROTOBUF_NONNULL InstDepRecord::mutable_rob_dep()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ProtoMessage.InstDepRecord.rob_dep)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rob_dep();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
InstDepRecord::_internal_rob_dep() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rob_dep_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* PROTOBUF_NONNULL
InstDepRecord::_internal_mutable_rob_dep() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rob_dep_;
}

// required uint64 comp_delay = 7;
inline bool InstDepRecord::has_comp_delay() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010U) != 0;
  return value;
}
inline void InstDepRecord::clear_comp_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comp_delay_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint64_t InstDepRecord::comp_delay() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.comp_delay)
  return _internal_comp_delay();
}
inline void InstDepRecord::set_comp_delay(::uint64_t value) {
  _internal_set_comp_delay(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.comp_delay)
}
inline ::uint64_t InstDepRecord::_internal_comp_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comp_delay_;
}
inline void InstDepRecord::_internal_set_comp_delay(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comp_delay_ = value;
}

// repeated uint64 reg_dep = 8;
inline int InstDepRecord::_internal_reg_dep_size() const {
  return _internal_reg_dep().size();
}
inline int InstDepRecord::reg_dep_size() const {
  return _internal_reg_dep_size();
}
inline void InstDepRecord::clear_reg_dep() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reg_dep_.Clear();
}
inline ::uint64_t InstDepRecord::reg_dep(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.reg_dep)
  return _internal_reg_dep().Get(index);
}
inline void InstDepRecord::set_reg_dep(int index, ::uint64_t value) {
  _internal_mutable_reg_dep()->Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.reg_dep)
}
inline void InstDepRecord::add_reg_dep(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_reg_dep()->Add(value);
  // @@protoc_insertion_point(field_add:ProtoMessage.InstDepRecord.reg_dep)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& InstDepRecord::reg_dep() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ProtoMessage.InstDepRecord.reg_dep)
  return _internal_reg_dep();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* PROTOBUF_NONNULL InstDepRecord::mutable_reg_dep()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ProtoMessage.InstDepRecord.reg_dep)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_reg_dep();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
InstDepRecord::_internal_reg_dep() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reg_dep_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* PROTOBUF_NONNULL
InstDepRecord::_internal_mutable_reg_dep() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.reg_dep_;
}

// optional uint32 weight = 9;
inline bool InstDepRecord::has_weight() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040U) != 0;
  return value;
}
inline void InstDepRecord::clear_weight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weight_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline ::uint32_t InstDepRecord::weight() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.weight)
  return _internal_weight();
}
inline void InstDepRecord::set_weight(::uint32_t value) {
  _internal_set_weight(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.weight)
}
inline ::uint32_t InstDepRecord::_internal_weight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weight_;
}
inline void InstDepRecord::_internal_set_weight(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weight_ = value;
}

// optional uint64 pc = 10;
inline bool InstDepRecord::has_pc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080U) != 0;
  return value;
}
inline void InstDepRecord::clear_pc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pc_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline ::uint64_t InstDepRecord::pc() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.pc)
  return _internal_pc();
}
inline void InstDepRecord::set_pc(::uint64_t value) {
  _internal_set_pc(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.pc)
}
inline ::uint64_t InstDepRecord::_internal_pc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pc_;
}
inline void InstDepRecord::_internal_set_pc(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pc_ = value;
}

// optional uint64 v_addr = 11;
inline bool InstDepRecord::has_v_addr() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100U) != 0;
  return value;
}
inline void InstDepRecord::clear_v_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_addr_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000100U;
}
inline ::uint64_t InstDepRecord::v_addr() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.v_addr)
  return _internal_v_addr();
}
inline void InstDepRecord::set_v_addr(::uint64_t value) {
  _internal_set_v_addr(value);
  _impl_._has_bits_[0] |= 0x00000100U;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.v_addr)
}
inline ::uint64_t InstDepRecord::_internal_v_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.v_addr_;
}
inline void InstDepRecord::_internal_set_v_addr(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_addr_ = value;
}

// optional uint32 asid = 12;
inline bool InstDepRecord::has_asid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200U) != 0;
  return value;
}
inline void InstDepRecord::clear_asid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.asid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200U;
}
inline ::uint32_t InstDepRecord::asid() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.InstDepRecord.asid)
  return _internal_asid();
}
inline void InstDepRecord::set_asid(::uint32_t value) {
  _internal_set_asid(value);
  _impl_._has_bits_[0] |= 0x00000200U;
  // @@protoc_insertion_point(field_set:ProtoMessage.InstDepRecord.asid)
}
inline ::uint32_t InstDepRecord::_internal_asid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.asid_;
}
inline void InstDepRecord::_internal_set_asid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.asid_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtoMessage


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ProtoMessage::InstDepRecord_RecordType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::ProtoMessage::InstDepRecord_RecordType>() {
  return ::ProtoMessage::InstDepRecord_RecordType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // inst_5fdep_5frecord_2eproto_2epb_2eh
