// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: inst_dep_record.proto
// Protobuf C++ Version: 6.32.0

#include "inst_dep_record.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ProtoMessage {

inline constexpr InstDepRecordHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        obj_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tick_freq_{::uint64_t{0u}},
        ver_{0u},
        window_size_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR InstDepRecordHeader::InstDepRecordHeader(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(InstDepRecordHeader_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InstDepRecordHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstDepRecordHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstDepRecordHeaderDefaultTypeInternal() {}
  union {
    InstDepRecordHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstDepRecordHeaderDefaultTypeInternal _InstDepRecordHeader_default_instance_;

inline constexpr InstDepRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rob_dep_{},
        reg_dep_{},
        seq_num_{::uint64_t{0u}},
        p_addr_{::uint64_t{0u}},
        type_{static_cast< ::ProtoMessage::InstDepRecord_RecordType >(0)},
        size_{0u},
        comp_delay_{::uint64_t{0u}},
        flags_{0u},
        weight_{0u},
        pc_{::uint64_t{0u}},
        v_addr_{::uint64_t{0u}},
        asid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR InstDepRecord::InstDepRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(InstDepRecord_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InstDepRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstDepRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstDepRecordDefaultTypeInternal() {}
  union {
    InstDepRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstDepRecordDefaultTypeInternal _InstDepRecord_default_instance_;
}  // namespace ProtoMessage
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_inst_5fdep_5frecord_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_inst_5fdep_5frecord_2eproto = nullptr;
const ::uint32_t
    TableStruct_inst_5fdep_5frecord_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecordHeader, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecordHeader, _impl_.obj_id_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecordHeader, _impl_.ver_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecordHeader, _impl_.tick_freq_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecordHeader, _impl_.window_size_),
        0,
        2,
        1,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _impl_._has_bits_),
        15, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _impl_.seq_num_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _impl_.p_addr_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _impl_.flags_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _impl_.rob_dep_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _impl_.comp_delay_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _impl_.reg_dep_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _impl_.weight_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _impl_.pc_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _impl_.v_addr_),
        PROTOBUF_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _impl_.asid_),
        0,
        2,
        1,
        3,
        5,
        ~0u,
        4,
        ~0u,
        6,
        7,
        8,
        9,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::ProtoMessage::InstDepRecordHeader)},
        {11, sizeof(::ProtoMessage::InstDepRecord)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::ProtoMessage::_InstDepRecordHeader_default_instance_._instance,
    &::ProtoMessage::_InstDepRecord_default_instance_._instance,
};
const char descriptor_table_protodef_inst_5fdep_5frecord_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025inst_dep_record.proto\022\014ProtoMessage\"]\n"
    "\023InstDepRecordHeader\022\016\n\006obj_id\030\001 \002(\t\022\016\n\003"
    "ver\030\002 \001(\r:\0010\022\021\n\ttick_freq\030\003 \002(\004\022\023\n\013windo"
    "w_size\030\004 \002(\r\"\266\002\n\rInstDepRecord\022\017\n\007seq_nu"
    "m\030\001 \002(\004\022=\n\004type\030\002 \002(\0162&.ProtoMessage.Ins"
    "tDepRecord.RecordType:\007INVALID\022\016\n\006p_addr"
    "\030\003 \001(\004\022\014\n\004size\030\004 \001(\r\022\r\n\005flags\030\005 \001(\r\022\017\n\007r"
    "ob_dep\030\006 \003(\004\022\022\n\ncomp_delay\030\007 \002(\004\022\017\n\007reg_"
    "dep\030\010 \003(\004\022\016\n\006weight\030\t \001(\r\022\n\n\002pc\030\n \001(\004\022\016\n"
    "\006v_addr\030\013 \001(\004\022\014\n\004asid\030\014 \001(\r\"8\n\nRecordTyp"
    "e\022\013\n\007INVALID\020\000\022\010\n\004LOAD\020\001\022\t\n\005STORE\020\002\022\010\n\004C"
    "OMP\020\003"
};
static ::absl::once_flag descriptor_table_inst_5fdep_5frecord_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_inst_5fdep_5frecord_2eproto = {
    false,
    false,
    445,
    descriptor_table_protodef_inst_5fdep_5frecord_2eproto,
    "inst_dep_record.proto",
    &descriptor_table_inst_5fdep_5frecord_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_inst_5fdep_5frecord_2eproto::offsets,
    file_level_enum_descriptors_inst_5fdep_5frecord_2eproto,
    file_level_service_descriptors_inst_5fdep_5frecord_2eproto,
};
namespace ProtoMessage {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL InstDepRecord_RecordType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_inst_5fdep_5frecord_2eproto);
  return file_level_enum_descriptors_inst_5fdep_5frecord_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t InstDepRecord_RecordType_internal_data_[] = {
    262144u, 0u, };
// ===================================================================

class InstDepRecordHeader::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<InstDepRecordHeader>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InstDepRecordHeader, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000b) ^ 0x0000000b) != 0;
  }
};

InstDepRecordHeader::InstDepRecordHeader(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InstDepRecordHeader_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessage.InstDepRecordHeader)
}
PROTOBUF_NDEBUG_INLINE InstDepRecordHeader::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ProtoMessage::InstDepRecordHeader& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        obj_id_(arena, from.obj_id_) {}

InstDepRecordHeader::InstDepRecordHeader(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const InstDepRecordHeader& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InstDepRecordHeader_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InstDepRecordHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tick_freq_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tick_freq_),
           offsetof(Impl_, window_size_) -
               offsetof(Impl_, tick_freq_) +
               sizeof(Impl_::window_size_));

  // @@protoc_insertion_point(copy_constructor:ProtoMessage.InstDepRecordHeader)
}
PROTOBUF_NDEBUG_INLINE InstDepRecordHeader::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        obj_id_(arena) {}

inline void InstDepRecordHeader::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tick_freq_),
           0,
           offsetof(Impl_, window_size_) -
               offsetof(Impl_, tick_freq_) +
               sizeof(Impl_::window_size_));
}
InstDepRecordHeader::~InstDepRecordHeader() {
  // @@protoc_insertion_point(destructor:ProtoMessage.InstDepRecordHeader)
  SharedDtor(*this);
}
inline void InstDepRecordHeader::SharedDtor(MessageLite& self) {
  InstDepRecordHeader& this_ = static_cast<InstDepRecordHeader&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.obj_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL InstDepRecordHeader::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) InstDepRecordHeader(arena);
}
constexpr auto InstDepRecordHeader::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InstDepRecordHeader),
                                            alignof(InstDepRecordHeader));
}
constexpr auto InstDepRecordHeader::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_InstDepRecordHeader_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          InstDepRecordHeader::IsInitializedImpl,
          &InstDepRecordHeader::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<InstDepRecordHeader>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &InstDepRecordHeader::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<InstDepRecordHeader>(), &InstDepRecordHeader::ByteSizeLong,
              &InstDepRecordHeader::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(InstDepRecordHeader, _impl_._cached_size_),
          false,
      },
      &InstDepRecordHeader::kDescriptorMethods,
      &descriptor_table_inst_5fdep_5frecord_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull InstDepRecordHeader_class_data_ =
        InstDepRecordHeader::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
InstDepRecordHeader::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&InstDepRecordHeader_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(InstDepRecordHeader_class_data_.tc_table);
  return InstDepRecordHeader_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 47, 2>
InstDepRecordHeader::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InstDepRecordHeader, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    InstDepRecordHeader_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ProtoMessage::InstDepRecordHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required uint32 window_size = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstDepRecordHeader, _impl_.window_size_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(InstDepRecordHeader, _impl_.window_size_)}},
    // required string obj_id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InstDepRecordHeader, _impl_.obj_id_)}},
    // optional uint32 ver = 2 [default = 0];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstDepRecordHeader, _impl_.ver_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(InstDepRecordHeader, _impl_.ver_)}},
    // required uint64 tick_freq = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstDepRecordHeader, _impl_.tick_freq_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(InstDepRecordHeader, _impl_.tick_freq_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string obj_id = 1;
    {PROTOBUF_FIELD_OFFSET(InstDepRecordHeader, _impl_.obj_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 ver = 2 [default = 0];
    {PROTOBUF_FIELD_OFFSET(InstDepRecordHeader, _impl_.ver_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint64 tick_freq = 3;
    {PROTOBUF_FIELD_OFFSET(InstDepRecordHeader, _impl_.tick_freq_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // required uint32 window_size = 4;
    {PROTOBUF_FIELD_OFFSET(InstDepRecordHeader, _impl_.window_size_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\40\6\0\0\0\0\0\0"
    "ProtoMessage.InstDepRecordHeader"
    "obj_id"
  }},
};
PROTOBUF_NOINLINE void InstDepRecordHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessage.InstDepRecordHeader)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.obj_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000000eU) != 0) {
    ::memset(&_impl_.tick_freq_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.window_size_) -
        reinterpret_cast<char*>(&_impl_.tick_freq_)) + sizeof(_impl_.window_size_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL InstDepRecordHeader::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const InstDepRecordHeader& this_ = static_cast<const InstDepRecordHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL InstDepRecordHeader::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const InstDepRecordHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessage.InstDepRecordHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // required string obj_id = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    const ::std::string& _s = this_._internal_obj_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "ProtoMessage.InstDepRecordHeader.obj_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint32 ver = 2 [default = 0];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this_._internal_ver(), target);
  }

  // required uint64 tick_freq = 3;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_tick_freq(), target);
  }

  // required uint32 window_size = 4;
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_window_size(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessage.InstDepRecordHeader)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t InstDepRecordHeader::ByteSizeLong(const MessageLite& base) {
  const InstDepRecordHeader& this_ = static_cast<const InstDepRecordHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t InstDepRecordHeader::ByteSizeLong() const {
  const InstDepRecordHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ProtoMessage.InstDepRecordHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // required string obj_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_obj_id());
    }
    // required uint64 tick_freq = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_tick_freq());
    }
  }
   {
    // optional uint32 ver = 2 [default = 0];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_ver());
    }
  }
   {
    // required uint32 window_size = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_window_size());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void InstDepRecordHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InstDepRecordHeader*>(&to_msg);
  auto& from = static_cast<const InstDepRecordHeader&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessage.InstDepRecordHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _this->_internal_set_obj_id(from._internal_obj_id());
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _this->_impl_.tick_freq_ = from._impl_.tick_freq_;
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _this->_impl_.ver_ = from._impl_.ver_;
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _this->_impl_.window_size_ = from._impl_.window_size_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstDepRecordHeader::CopyFrom(const InstDepRecordHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessage.InstDepRecordHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InstDepRecordHeader::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const InstDepRecordHeader&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void InstDepRecordHeader::InternalSwap(InstDepRecordHeader* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.obj_id_, &other->_impl_.obj_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InstDepRecordHeader, _impl_.window_size_)
      + sizeof(InstDepRecordHeader::_impl_.window_size_)
      - PROTOBUF_FIELD_OFFSET(InstDepRecordHeader, _impl_.tick_freq_)>(
          reinterpret_cast<char*>(&_impl_.tick_freq_),
          reinterpret_cast<char*>(&other->_impl_.tick_freq_));
}

::google::protobuf::Metadata InstDepRecordHeader::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InstDepRecord::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<InstDepRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000015) ^ 0x00000015) != 0;
  }
};

InstDepRecord::InstDepRecord(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InstDepRecord_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessage.InstDepRecord)
}
PROTOBUF_NDEBUG_INLINE InstDepRecord::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ProtoMessage::InstDepRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rob_dep_{visibility, arena, from.rob_dep_},
        reg_dep_{visibility, arena, from.reg_dep_} {}

InstDepRecord::InstDepRecord(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const InstDepRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InstDepRecord_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InstDepRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, seq_num_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, seq_num_),
           offsetof(Impl_, asid_) -
               offsetof(Impl_, seq_num_) +
               sizeof(Impl_::asid_));

  // @@protoc_insertion_point(copy_constructor:ProtoMessage.InstDepRecord)
}
PROTOBUF_NDEBUG_INLINE InstDepRecord::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        rob_dep_{visibility, arena},
        reg_dep_{visibility, arena} {}

inline void InstDepRecord::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, seq_num_),
           0,
           offsetof(Impl_, asid_) -
               offsetof(Impl_, seq_num_) +
               sizeof(Impl_::asid_));
}
InstDepRecord::~InstDepRecord() {
  // @@protoc_insertion_point(destructor:ProtoMessage.InstDepRecord)
  SharedDtor(*this);
}
inline void InstDepRecord::SharedDtor(MessageLite& self) {
  InstDepRecord& this_ = static_cast<InstDepRecord&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL InstDepRecord::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) InstDepRecord(arena);
}
constexpr auto InstDepRecord::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.rob_dep_) +
          decltype(InstDepRecord::_impl_.rob_dep_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.reg_dep_) +
          decltype(InstDepRecord::_impl_.reg_dep_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(InstDepRecord), alignof(InstDepRecord), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&InstDepRecord::PlacementNew_,
                                 sizeof(InstDepRecord),
                                 alignof(InstDepRecord));
  }
}
constexpr auto InstDepRecord::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_InstDepRecord_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          InstDepRecord::IsInitializedImpl,
          &InstDepRecord::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<InstDepRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &InstDepRecord::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<InstDepRecord>(), &InstDepRecord::ByteSizeLong,
              &InstDepRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_._cached_size_),
          false,
      },
      &InstDepRecord::kDescriptorMethods,
      &descriptor_table_inst_5fdep_5frecord_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull InstDepRecord_class_data_ =
        InstDepRecord::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
InstDepRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&InstDepRecord_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(InstDepRecord_class_data_.tc_table);
  return InstDepRecord_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 1, 0, 2>
InstDepRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    InstDepRecord_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ProtoMessage::InstDepRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required uint64 seq_num = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstDepRecord, _impl_.seq_num_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.seq_num_)}},
    // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
    {::_pbi::TcParser::FastEr0S1,
     {16, 2, 3, PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.type_)}},
    // optional uint64 p_addr = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstDepRecord, _impl_.p_addr_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.p_addr_)}},
    // optional uint32 size = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstDepRecord, _impl_.size_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.size_)}},
    // optional uint32 flags = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstDepRecord, _impl_.flags_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.flags_)}},
    // repeated uint64 rob_dep = 6;
    {::_pbi::TcParser::FastV64R1,
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.rob_dep_)}},
    // required uint64 comp_delay = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstDepRecord, _impl_.comp_delay_), 4>(),
     {56, 4, 0, PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.comp_delay_)}},
    // repeated uint64 reg_dep = 8;
    {::_pbi::TcParser::FastV64R1,
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.reg_dep_)}},
    // optional uint32 weight = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstDepRecord, _impl_.weight_), 6>(),
     {72, 6, 0, PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.weight_)}},
    // optional uint64 pc = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstDepRecord, _impl_.pc_), 7>(),
     {80, 7, 0, PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.pc_)}},
    // optional uint64 v_addr = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstDepRecord, _impl_.v_addr_), 8>(),
     {88, 8, 0, PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.v_addr_)}},
    // optional uint32 asid = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstDepRecord, _impl_.asid_), 9>(),
     {96, 9, 0, PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.asid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint64 seq_num = 1;
    {PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.seq_num_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
    {PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.type_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint64 p_addr = 3;
    {PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.p_addr_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 size = 4;
    {PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.size_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 flags = 5;
    {PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.flags_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint64 rob_dep = 6;
    {PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.rob_dep_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUInt64)},
    // required uint64 comp_delay = 7;
    {PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.comp_delay_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated uint64 reg_dep = 8;
    {PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.reg_dep_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUInt64)},
    // optional uint32 weight = 9;
    {PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.weight_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 pc = 10;
    {PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.pc_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 v_addr = 11;
    {PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.v_addr_), _Internal::kHasBitsOffset + 8, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 asid = 12;
    {PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.asid_), _Internal::kHasBitsOffset + 9, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  {{
      {0, 3},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void InstDepRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessage.InstDepRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rob_dep_.Clear();
  _impl_.reg_dep_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    ::memset(&_impl_.seq_num_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.pc_) -
        reinterpret_cast<char*>(&_impl_.seq_num_)) + sizeof(_impl_.pc_));
  }
  if ((cached_has_bits & 0x00000300U) != 0) {
    ::memset(&_impl_.v_addr_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.asid_) -
        reinterpret_cast<char*>(&_impl_.v_addr_)) + sizeof(_impl_.asid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL InstDepRecord::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const InstDepRecord& this_ = static_cast<const InstDepRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL InstDepRecord::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const InstDepRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessage.InstDepRecord)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // required uint64 seq_num = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_seq_num(), target);
  }

  // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this_._internal_type(), target);
  }

  // optional uint64 p_addr = 3;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this_._internal_p_addr(), target);
  }

  // optional uint32 size = 4;
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this_._internal_size(), target);
  }

  // optional uint32 flags = 5;
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this_._internal_flags(), target);
  }

  // repeated uint64 rob_dep = 6;
  for (int i = 0, n = this_._internal_rob_dep_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this_._internal_rob_dep().Get(i), target);
  }

  // required uint64 comp_delay = 7;
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this_._internal_comp_delay(), target);
  }

  // repeated uint64 reg_dep = 8;
  for (int i = 0, n = this_._internal_reg_dep_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this_._internal_reg_dep().Get(i), target);
  }

  // optional uint32 weight = 9;
  if ((cached_has_bits & 0x00000040U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this_._internal_weight(), target);
  }

  // optional uint64 pc = 10;
  if ((cached_has_bits & 0x00000080U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        10, this_._internal_pc(), target);
  }

  // optional uint64 v_addr = 11;
  if ((cached_has_bits & 0x00000100U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        11, this_._internal_v_addr(), target);
  }

  // optional uint32 asid = 12;
  if ((cached_has_bits & 0x00000200U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this_._internal_asid(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessage.InstDepRecord)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t InstDepRecord::ByteSizeLong(const MessageLite& base) {
  const InstDepRecord& this_ = static_cast<const InstDepRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t InstDepRecord::ByteSizeLong() const {
  const InstDepRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ProtoMessage.InstDepRecord)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint64 rob_dep = 6;
    {
      ::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
          this_._internal_rob_dep());
      ::size_t tag_size = ::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_rob_dep_size());
      total_size += tag_size + data_size;
    }
    // repeated uint64 reg_dep = 8;
    {
      ::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
          this_._internal_reg_dep());
      ::size_t tag_size = ::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_reg_dep_size());
      total_size += tag_size + data_size;
    }
  }
   {
    // required uint64 seq_num = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_seq_num());
    }
  }
   {
    // optional uint64 p_addr = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_p_addr());
    }
  }
   {
    // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
    }
  }
   {
    // optional uint32 size = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_size());
    }
  }
   {
    // required uint64 comp_delay = 7;
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_comp_delay());
    }
  }
  if ((cached_has_bits & 0x000000e0U) != 0) {
    // optional uint32 flags = 5;
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_flags());
    }
    // optional uint32 weight = 9;
    if ((cached_has_bits & 0x00000040U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_weight());
    }
    // optional uint64 pc = 10;
    if ((cached_has_bits & 0x00000080U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_pc());
    }
  }
  if ((cached_has_bits & 0x00000300U) != 0) {
    // optional uint64 v_addr = 11;
    if ((cached_has_bits & 0x00000100U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_v_addr());
    }
    // optional uint32 asid = 12;
    if ((cached_has_bits & 0x00000200U) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this_._internal_asid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void InstDepRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InstDepRecord*>(&to_msg);
  auto& from = static_cast<const InstDepRecord&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessage.InstDepRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rob_dep()->MergeFrom(from._internal_rob_dep());
  _this->_internal_mutable_reg_dep()->MergeFrom(from._internal_reg_dep());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _this->_impl_.seq_num_ = from._impl_.seq_num_;
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _this->_impl_.p_addr_ = from._impl_.p_addr_;
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _this->_impl_.size_ = from._impl_.size_;
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _this->_impl_.comp_delay_ = from._impl_.comp_delay_;
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      _this->_impl_.flags_ = from._impl_.flags_;
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      _this->_impl_.weight_ = from._impl_.weight_;
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      _this->_impl_.pc_ = from._impl_.pc_;
    }
  }
  if ((cached_has_bits & 0x00000300U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      _this->_impl_.v_addr_ = from._impl_.v_addr_;
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      _this->_impl_.asid_ = from._impl_.asid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstDepRecord::CopyFrom(const InstDepRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessage.InstDepRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InstDepRecord::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const InstDepRecord&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void InstDepRecord::InternalSwap(InstDepRecord* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.rob_dep_.InternalSwap(&other->_impl_.rob_dep_);
  _impl_.reg_dep_.InternalSwap(&other->_impl_.reg_dep_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.asid_)
      + sizeof(InstDepRecord::_impl_.asid_)
      - PROTOBUF_FIELD_OFFSET(InstDepRecord, _impl_.seq_num_)>(
          reinterpret_cast<char*>(&_impl_.seq_num_),
          reinterpret_cast<char*>(&other->_impl_.seq_num_));
}

::google::protobuf::Metadata InstDepRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtoMessage
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_inst_5fdep_5frecord_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
