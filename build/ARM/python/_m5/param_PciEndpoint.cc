/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:330
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/PciEndpoint.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "dev/pci/device.hh"

#include "base/types.hh"
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
py::module_ m = m_internal.def_submodule("param_PciEndpoint");
    py::class_<PciEndpointParams, PciDeviceParams, std::unique_ptr<PciEndpointParams, py::nodelete>>(m, "PciEndpointParams")
        .def_readwrite("BAR0", &PciEndpointParams::BAR0)
        .def_readwrite("BAR1", &PciEndpointParams::BAR1)
        .def_readwrite("BAR2", &PciEndpointParams::BAR2)
        .def_readwrite("BAR3", &PciEndpointParams::BAR3)
        .def_readwrite("BAR4", &PciEndpointParams::BAR4)
        .def_readwrite("BAR5", &PciEndpointParams::BAR5)
        .def_readwrite("CardbusCIS", &PciEndpointParams::CardbusCIS)
        .def_readwrite("ExpansionROM", &PciEndpointParams::ExpansionROM)
        .def_readwrite("MaximumLatency", &PciEndpointParams::MaximumLatency)
        .def_readwrite("MinimumGrant", &PciEndpointParams::MinimumGrant)
        .def_readwrite("SubsystemID", &PciEndpointParams::SubsystemID)
        .def_readwrite("SubsystemVendorID", &PciEndpointParams::SubsystemVendorID)
        ;

    py::class_<gem5::PciEndpoint, gem5::PciDevice, std::unique_ptr<gem5::PciEndpoint, py::nodelete>>(m, "gem5_COLONS_PciEndpoint")
        ;

}

static EmbeddedPyBind embed_obj("PciEndpoint", module_init, "PciDevice");

} // namespace gem5
