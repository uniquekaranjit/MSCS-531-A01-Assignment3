/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   src/mem/slicc/symbols/Type.py:668
 */

#include <iostream>
#include <memory>

#include "mem/ruby/protocol/CHI/Cache_TriggerMsg.hh"
#include "mem/ruby/system/RubySystem.hh"

namespace gem5
{

namespace ruby
{

namespace CHI
{

/** \brief Print the state of this object */
void
Cache_TriggerMsg::print(std::ostream& out) const
{
    out << "[Cache_TriggerMsg: ";
    out << "addr = " << printAddress(m_addr, block_size_bits) << " ";
    out << "usesTxnId = " << m_usesTxnId << " ";
    out << "from_hazard = " << m_from_hazard << " ";
    out << "]";
}
bool
Cache_TriggerMsg::functionalRead(Packet* param_pkt)
{
return (false);

}
bool
Cache_TriggerMsg::functionalRead(Packet* param_pkt, WriteMask& param_mask)
{
return (false);

}
bool
Cache_TriggerMsg::functionalWrite(Packet* param_pkt)
{
return (false);

}

} // namespace CHI
} // namespace ruby
} // namespace gem5
