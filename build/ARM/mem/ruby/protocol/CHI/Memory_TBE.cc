/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   src/mem/slicc/symbols/Type.py:668
 */

#include <iostream>
#include <memory>

#include "mem/ruby/protocol/CHI/Memory_TBE.hh"
#include "mem/ruby/system/RubySystem.hh"

namespace gem5
{

namespace ruby
{

namespace CHI
{

/** \brief Print the state of this object */
void
Memory_TBE::print(std::ostream& out) const
{
    out << "[Memory_TBE: ";
    out << "storSlot = " << m_storSlot << " ";
    out << "addr = " << printAddress(m_addr, block_size_bits) << " ";
    out << "accAddr = " << printAddress(m_accAddr, block_size_bits) << " ";
    out << "txnId = " << printAddress(m_txnId, block_size_bits) << " ";
    out << "accSize = " << m_accSize << " ";
    out << "state = " << m_state << " ";
    out << "dataBlk = " << m_dataBlk << " ";
    out << "dataBlkValid = " << m_dataBlkValid << " ";
    out << "rxtxBytes = " << m_rxtxBytes << " ";
    out << "requestor = " << m_requestor << " ";
    out << "destination = " << m_destination << " ";
    out << "useDataSepResp = " << m_useDataSepResp << " ";
    out << "]";
}

} // namespace CHI
} // namespace ruby
} // namespace gem5
