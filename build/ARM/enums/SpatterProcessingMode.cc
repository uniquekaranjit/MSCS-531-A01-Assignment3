/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/enum_cc.py:167
 */

#include "base/compiler.hh"
#include "enums/SpatterProcessingMode.hh"

namespace gem5
{

namespace enums
{
    const char *SpatterProcessingModeStrings[Num_SpatterProcessingMode] =
    {
        "synchronous",
        "asynchronous",
    };
} // namespace enums
} // namespace gem5
#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <sim/init.hh>

namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
    py::module_ m = m_internal.def_submodule("enum_SpatterProcessingMode");

py::enum_<enums::SpatterProcessingMode>(m, "enum_SpatterProcessingMode")
        .value("synchronous", enums::synchronous)
        .value("asynchronous", enums::asynchronous)
        .value("Num_SpatterProcessingMode", enums::Num_SpatterProcessingMode)
        .export_values()
        ;
    }
static EmbeddedPyBind embed_enum("enum_SpatterProcessingMode", module_init);

} // namespace gem5
    
