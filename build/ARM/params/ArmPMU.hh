/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_hh.py:233
 */

#ifndef __PARAMS__ArmPMU__
#define __PARAMS__ArmPMU__

namespace gem5 {
namespace ArmISA {
class PMU;
} // namespace ArmISA
} // namespace gem5
#include <cstddef>
#include "enums/EventTypeId.hh"
#include "base/types.hh"
#include "params/ArmInterruptPin.hh"
#include "params/Platform.hh"
#include <unordered_map>
#include <string>

#include "params/SimObject.hh"


namespace gem5
{
struct ArmPMUParams
    : public SimObjectParams
{
    gem5::ArmISA::PMU * create() const;
    enums::EventTypeId cycleEventId;
    int eventCounters;
    bool exitOnPMUControl;
    bool exitOnPMUInterrupt;
    gem5::ArmInterruptPinGen * interrupt;
    gem5::Platform * platform;
    std::unordered_map<int, std::string> statCounters;
    bool use64bitCounters;
};

} // namespace gem5

#endif // __PARAMS__ArmPMU__
